{
  "_args": [
    [
      {
        "raw": "pug-runtime@0.0.0",
        "scope": null,
        "escapedName": "pug-runtime",
        "name": "pug-runtime",
        "rawSpec": "0.0.0",
        "spec": "0.0.0",
        "type": "version"
      },
      "/Users/daplie/Desktop/node/express_website/node_modules/pug"
    ]
  ],
  "_from": "pug-runtime@0.0.0",
  "_id": "pug-runtime@0.0.0",
  "_inCache": true,
  "_location": "/pug-runtime",
  "_nodeVersion": "1.6.2",
  "_npmUser": {
    "name": "forbeslindesay",
    "email": "forbes@lindesay.co.uk"
  },
  "_npmVersion": "2.7.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pug-runtime@0.0.0",
    "scope": null,
    "escapedName": "pug-runtime",
    "name": "pug-runtime",
    "rawSpec": "0.0.0",
    "spec": "0.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/pug",
    "/pug-attrs",
    "/pug-code-gen"
  ],
  "_resolved": "https://registry.npmjs.org/pug-runtime/-/pug-runtime-0.0.0.tgz",
  "_shasum": "f8105094f78ac893cdb19746a7cb0916fd418697",
  "_shrinkwrap": null,
  "_spec": "pug-runtime@0.0.0",
  "_where": "/Users/daplie/Desktop/node/express_website/node_modules/pug",
  "author": {
    "name": "ForbesLindesay"
  },
  "bugs": {
    "url": "https://github.com/jadejs/jade-runtime/issues"
  },
  "dependencies": {},
  "description": "The runtime components for the jade templating language",
  "devDependencies": {
    "istanbul": "^0.3.5",
    "testit": "^2.0.2",
    "uglify-js": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "shasum": "f8105094f78ac893cdb19746a7cb0916fd418697",
    "tarball": "https://registry.npmjs.org/pug-runtime/-/pug-runtime-0.0.0.tgz"
  },
  "files": [
    "build.js",
    "index.js",
    "lib/dependencies.js",
    "lib/internals.js",
    "lib/sources.js",
    "wrap.js"
  ],
  "gitHead": "f6247ca510b88d720b270ce7005b6642acdc7112",
  "homepage": "https://github.com/jadejs/jade-runtime#readme",
  "keywords": [
    "jade"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    }
  ],
  "name": "pug-runtime",
  "optionalDependencies": {},
  "readme": "# jade-runtime\n\nThe runtime components for the jade templating language\n\n[![Build Status](https://img.shields.io/travis/jadejs/jade-runtime/master.svg)](https://travis-ci.org/jadejs/jade-runtime)\n[![Dependency Status](https://img.shields.io/gemnasium/jadejs/jade-runtime.svg)](https://gemnasium.com/jadejs/jade-runtime)\n[![NPM version](https://img.shields.io/npm/v/jade-runtime.svg)](https://www.npmjs.org/package/jade-runtime)\n\n## Installation\n\n    npm install jade-runtime\n\n## Usage\n\n\nYou can call runtime methods directly using `runtime.method`.  This is particularly useful when compiling to deal with things that are already known at compile time.\n\n```js\nvar runtime = require('jade-runtime');\n\nassert(runtime.attr('foo', 'bar', true, true) === ' foo=\"bar\"');\n```\n\nYou can also build a string with a given list of functions available as `jade_method` by calling `build(arrayOfMethods)`.  This is useful for inlining runtime functions within the compiled templates.\n\n```js\nvar build = require('jade-runtime/build');\nvar src = build(['attr']);\n\nvar attr = Function('', src + ';return jade_attr;')();\nassert(attr('foo', 'bar', true, true) === ' foo=\"bar\"');\n```\n\nWhen testing code compiled for the browser in Node.js, it is necessary to make the runtime available. To do so, one can use `require('jade-runtime/wrap')`:\n\n```js\nvar jade = require('jade');\nvar wrap = require('jade-runtime/wrap');\n\nvar jadeSrc = 'p= content';\n// By default compileClient automatically embeds the needed runtime functions,\n// rendering this module useless.\nvar compiledCode = jade.compileClient(jadeSrc, {\n  externalRuntime: true\n});\n//=> 'function template (locals) { ... jade.escape() ... }'\n\nvar templateFunc = wrap(compiledCode);\ntemplateFunc({content: 'Hey!'});\n//=> '<p>Hey!</p>'\n\n// Change template function name to 'heyTemplate'\ncompiledCode = jade.compileClient(jadeSrc, {\n  externalRuntime: true,\n  name: 'heyTemplate'\n});\n//=> 'function heyTemplate (locals) { ... }'\n\ntemplateFunc = wrap(compiledCode, 'heyTemplate');\ntemplateFunc({content: 'Hey!'});\n//=> '<p>Hey!</p>'\n```\n\n\n## License\n\n  MIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jadejs/jade-runtime.git"
  },
  "scripts": {
    "coverage": "istanbul cover test",
    "posttest": "npm run coverage",
    "prepublish": "node prepublish",
    "pretest": "npm run prepublish",
    "test": "node test"
  },
  "version": "0.0.0"
}
